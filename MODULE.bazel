# The MODULE.bazel file appears in the root directory of each Bazel module.
# Its main purpose is to list the other Bazel modules that this module depends
# on. MODULE.bazel may also contain non-module dependencies declared with
# repository rules or module extensions. It may have other declarations too
# like toolchain registrations.

# The string below is this module's documentation string. It may be shown
# on the Bazel Central Registry and other places.
"""
rules_go_simple is a simple set of Bazel rules for building Go code. It
is intended to be a simple, clean, minimal example of how to write Bazel
rules for new languages.
"""

# The module declaration sets this module's name. You can use this name to
# refer to targets within this module. Other modules can depend on this module
# using this name.
module(name = "rules_go_simple")

# bazel_dep declarations register dependencies on other modules.
# Bazel recursively fetches their MODULE.bazel files and other metadata
# from the Bazel Central Registry (or whatever registry you're using)
# and selects a version of each module to use, which may be higher than the
# version listed here if another module requires a higher version.

# bazel_skylib is a common library for writing and testing Bazel rules.
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# platforms contains constraints matching various operating systems and
# CPU architectures, used for toolchain selection.
bazel_dep(name = "platforms", version = "1.0.0")

# TODO: convert go_download into a module extension

go_download = use_repo_rule("//:deps.bzl", "go_download")

go_download(
    name = "go_darwin_arm64",
    goarch = "arm64",
    goos = "darwin",
    sha256 = "92d30a678f306c327c544758f2d2fa5515aa60abe9dba4ca35fbf9b8bfc53212",
    urls = ["https://go.dev/dl/go1.24.5.darwin-arm64.tar.gz"],
)

go_download(
    name = "go_linux_amd64",
    goarch = "amd64",
    goos = "linux",
    sha256 = "10ad9e86233e74c0f6590fe5426895de6bf388964210eac34a6d83f38918ecdc",
    urls = ["https://go.dev/dl/go1.24.5linux-amd64.tar.gz"],
)

# register_toolchains makes one or more toolchain rules available for Bazel's
# automatic toolchain selection. Bazel will pick whichever toolchain is
# compatible with the execution and target platforms.
register_toolchains(
    "@go_darwin_arm64//:toolchain",
    "@go_linux_amd64//:toolchain",
)
